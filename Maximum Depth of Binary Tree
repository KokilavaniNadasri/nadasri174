# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        if not root:
            return 0
        ans=[]
        queue=[]
        queue.append(root)
        while queue:
            currsize=len(queue)
            currlist=[]
            while currsize>0:
                currnode=queue.pop(0)
                currlist.append(currnode.val)
                currsize=currsize-1
                if currnode.left is not None:
                    queue.append(currnode.left)
                if currnode.right is not None:
                    queue.append(currnode.right)
            ans.append(currlist)
        return len(ans)
                    
